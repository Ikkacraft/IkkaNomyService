{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "",
    "contact": {
      "name": ""
    },
    "license": {
      "name": "",
      "url": "http://licenseUrl"
    }
  },
  "host": "localhost:9000",
  "basePath": "%SWAGGER_API_BASEPATH%",
  "tags": [
    {
      "name": "accounts"
    },
    {
      "name": "transactions"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Test web service is up",
        "description": "",
        "operationId": "index",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Your new application is ready."
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Get all accounts",
        "description": "Return a list of accounts",
        "operationId": "getAccounts",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Users found"
          },
          "404": {
            "description": "Users not found"
          }
        }
      },
      "post": {
        "tags": [
          "accounts"
        ],
        "summary": "Create an account",
        "description": "",
        "operationId": "createAccount",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The account has been successfully created"
          },
          "400": {
            "description": "The account could not be created"
          }
        }
      }
    },
    "/accounts/{account_id}": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Get one specific account",
        "description": "Return a specific account",
        "operationId": "getAccount",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "User found"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "accounts"
        ],
        "summary": "Update an account",
        "description": "",
        "operationId": "updateAccount",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The account has been successfully updated"
          },
          "400": {
            "description": "The account could not be updated"
          }
        }
      },
      "delete": {
        "tags": [
          "accounts"
        ],
        "summary": "Delete an account",
        "description": "",
        "operationId": "deleteAccount",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The account has been successfully deleted"
          }
        }
      }
    },
    "/accounts/{account_id}/transactions": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Get all transactions for an account",
        "description": "Return a list of transaction",
        "operationId": "getTransactionsByAccount",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction found"
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get all transactions",
        "description": "Return a list of transactions",
        "operationId": "getTransactions",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Transactions found"
          },
          "404": {
            "description": "Transactions not found"
          }
        }
      },
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "create one transaction",
        "description": "",
        "operationId": "createTransaction",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Transaction has been successfully created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/transactions/{transaction_id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get one transaction",
        "description": "Return a transaction",
        "operationId": "getTransaction",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction found"
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Account": {
      "type": "object",
      "properties": {
        "account_id": {
          "type": "integer",
          "format": "int64"
        },
        "account_balance": {
          "$ref": "#/definitions/BigDecimal"
        },
        "description": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ActionAnyContent": {
      "type": "object"
    },
    "BigDecimal": {
      "type": "object",
      "properties": {
        "whole": {
          "type": "boolean",
          "default": false
        },
        "validDouble": {
          "type": "boolean",
          "default": false
        },
        "validFloat": {
          "type": "boolean",
          "default": false
        },
        "validByte": {
          "type": "boolean",
          "default": false
        },
        "validChar": {
          "type": "boolean",
          "default": false
        },
        "validInt": {
          "type": "boolean",
          "default": false
        },
        "validShort": {
          "type": "boolean",
          "default": false
        },
        "validLong": {
          "type": "boolean",
          "default": false
        },
        "decimalDouble": {
          "type": "boolean",
          "default": false
        },
        "decimalFloat": {
          "type": "boolean",
          "default": false
        },
        "binaryDouble": {
          "type": "boolean",
          "default": false
        },
        "binaryFloat": {
          "type": "boolean",
          "default": false
        },
        "exactDouble": {
          "type": "boolean",
          "default": false
        },
        "exactFloat": {
          "type": "boolean",
          "default": false
        }
      }
    }
  }
}
